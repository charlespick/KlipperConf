# This is a config for running a CR10 V3 with a BTT SKR Pro

#############################################
# Extra Configs
#############################################

#[include adxl345.cfg]

#############################################
# Core Kinematics
#############################################

[printer]
kinematics: cartesian
max_velocity: 300 
max_accel: 3000
max_z_velocity: 45
max_z_accel: 500

[stepper_x]
step_pin: PE9
dir_pin: PF1
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE10
position_endstop: 0
position_max: 325
homing_speed: 150

[tmc2209 stepper_x]
uart_pin: PC13
run_current: 1.064
stealthchop_threshold: 200
diag_pin: ^PB10
driver_SGTHRS: 135

[stepper_y]
step_pin: PE11
dir_pin: PE8
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PG5
position_endstop: 0
position_max: 310
homing_speed: 150

[tmc2209 stepper_y]
uart_pin: PE3
run_current: 1.064
stealthchop_threshold: 200
diag_pin: ^PE12
driver_SGTHRS: 135

[stepper_z]
step_pin: PE13
dir_pin: !PC2
enable_pin: !PC0
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -10
position_max: 410
homing_speed: 45

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 1.064
stealthchop_threshold: 30

#############################################
# Heaaters
#############################################

[extruder]
step_pin: PE14
dir_pin: !PA0
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.77924 # verified 16.76mm error throughout a standard print
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.073656
heater_pin: PB1 
sensor_pin:  PF3 
sensor_type: EPCOS 100K B57560G104F
control: pid
pid_kp: 27.837
pid_ki: 1.628
pid_kd: 119.005
min_temp: 0
max_temp: 280 

[tmc2209 extruder]
uart_pin: PD4
run_current: 1.064
stealthchop_threshold: 40

[heater_bed]
heater_pin: PD12
sensor_pin: PF4 
sensor_type: NTC 100K MGB18-104F39050L32
control: pid
min_temp: 0
max_temp: 100
pid_kp: 60.480
pid_ki: 2.688
pid_kd: 340.198

#############################################
# Temperature Devices
#############################################

[fan]
pin: PC8

[heater_fan extruder]
pin: PE5

[controller_fan case_fan]
pin: PE6
fan_speed: 1.0
idle_speed: 0.5

[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host

[temperature_sensor SKR_Pro]
sensor_type: temperature_mcu

#############################################
# Software Settings
#############################################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_41005A000250533754323420-if00

[input_shaper]

[idle_timeout]
timeout: 3600

[sdcard_loop]

[gcode_arcs]

[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

#############################################
# Accesories
#############################################

[neopixel bridge_light]
pin: PF8
chain_count: 16
initial_red: 1.0
initial_blue: 1.0
initial_green: 1.0

[filament_switch_sensor runout_sensor]
switch_pin: PE15

[probe]
pin: !PG8
x_offset: -61
y_offset: -4
z_offset: 0.998
speed: 45

#############################################
# EZABL Settings
#############################################

[screws_tilt_adjust] 
speed: 150
screw1: 325, 45
screw1_name: front_right
screw2: 94, 37
screw2_name: front_left
screw3: 94, 274
screw3_name: back_left
screw4: 325, 274
screw4_name: back_right
screw_thread: CW-M4

[safe_z_home]
home_xy_position: 216, 159
speed: 150
z_hop: 5 
z_hop_speed: 150

[bed_mesh]
speed: 150
mesh_min: 10, 10 
mesh_max: 264, 290 
probe_count: 5,5
fade_end: 10.0

#############################################
# Macros
#############################################

[gcode_macro M900]
gcode: 
    SET_PRESSURE_ADVANCE ADVANCE={params.K}

[gcode_macro load_filament]
gcode:
    G28
    G1 X155 Y155 Z200 F3000

[gcode_macro start_print]
gcode: 
    conf_runout
    SAVE_GCODE_STATE NAME=start_print_state
    G28 ; home all axes
    G1 X300 Y10 Z0.2 F15000 ; move to prime
    M83
    G92 E0 ; reset extrusion distance
    G1 Y210 E20 F1000 ; prime nozzle
    G1 Y310 F300000 ; quick wipe
    G92 E0 ; reset extrusion distance
    RESTORE_GCODE_STATE NAME=start_print_state
description: Home and Prime

[gcode_macro conf_runout]
gcode:
    {% if printer["filament_switch_sensor runout_sensor"].filament_detected %}
        SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=1
    {% else %}
        SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=0
    {% endif %}

[gcode_macro end_print]
gcode: 
    M106 S0 ; turn off cooling fan
    M104 S0 ; turn off extruder
    M140 S0 ; turn off bed
    PRESENT_BED
    M84 ; disable motors
description: Finish print

[gcode_macro present_bed]
gcode: 
    G0 X0 Y310
description: Moves the head and bed WITHOUT THE Z AXIS

[gcode_macro M900]
gcode: 
    SET_PRESSURE_ADVANCE ADVANCE={params.K|float}

    [gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
